{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":41,"column":12},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId ","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = 'mongodb+srv://markofsuccess:MDBlegacy2020!@myfirstcluster-w59pp.mongodb.net/task_manager?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                            tasks=mongo.db.tasks.find())","    ","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                            categories=mongo.db.categories.find())","                            ","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)","            "],"id":1},{"start":{"row":0,"column":0},"end":{"row":43,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = 'mongodb+srv://markofsuccess:MDBlegacy2020!@myfirstcluster-w59pp.mongodb.net/task_manager?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}]]},"ace":{"folds":[],"scrolltop":403,"scrollleft":0,"selection":{"start":{"row":43,"column":23},"end":{"row":43,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":12,"state":"start","mode":"ace/mode/python"}},"timestamp":1573824052049,"hash":"b833b1374157ae44f3922c86d7a17e6596b961f4"}